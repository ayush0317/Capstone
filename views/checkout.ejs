<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Checkout</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <link rel="stylesheet" href="/css/styles.css"/>
  <link rel="stylesheet" href="/css/checkout.css"/>
</head>
<body>


    <nav class="navbar navbar-expand-lg navbar-dark fixed-top">
        <div class="container">
            <a class="navbar-brand fw-bold text-uppercase" href="/">Swadisht</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item"><a class="nav-link" href="/">Home</a></li>
                    <li class="nav-item"><a class="nav-link" href="/menu">Menu</a></li>
                    <li class="nav-item"><a class="nav-link" href="/about">About</a></li>
                    <li class="nav-item"><a class="nav-link" href="/contact">Contact</a></li>
    
                    <% if (user) { %>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown">
                                üë§ <%= user.firstName %>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" href="/profile">Profile</a></li>
                                <li><a class="dropdown-item text-danger" href="/logout">Logout</a></li>
                            </ul>
                        </li>
                    <% } else { %>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-white" href="#" id="guestDropdown" role="button" data-bs-toggle="dropdown">
                                üë§ Guest
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" href="/login">Sign In</a></li>
                                <li><a class="dropdown-item" href="/signup">Sign Up</a></li>
                            </ul>
                        </li>
                    <% } %>
                </ul>
            </div>
        </div>
    </nav>
    


  <!-- ‚úÖ Checkout Content -->
  <div class="container mt-5 pt-5">
    <h2 class="text-center mb-4">üõí Checkout</h2>
    <div class="row">
      <!-- Order Summary -->
      <div class="col-md-6">
        <h4>Order Summary</h4>
        <ul class="list-group" id="order-summary">
          <li class="list-group-item text-muted">Loading cart items...</li>
        </ul>
        <hr>
        <h5>Total Amount: ‚Çπ <span id="checkout-total">0</span></h5>
      </div>

      <!-- Billing Form -->
      <div class="col-md-6">
        <h4>Billing Information</h4>
        <form id="checkout-form">
          <div class="mb-3">
            <label class="form-label">Full Name</label>
            <input type="text" class="form-control" id="name" required />
          </div>
          <div class="mb-3">
            <label class="form-label">Email Address</label>
            <input type="email" class="form-control" id="email" required />
          </div>
          <div class="mb-3">
            <label class="form-label">Delivery Address</label>
            <input type="text" class="form-control" id="address" required />
          </div>
          <div class="mb-3">
            <label class="form-label">Payment Method</label>
            <select class="form-select" id="payment-method" required onchange="togglePaymentFields()">
              <option value="">Select Payment Method</option>
              <option value="COD">Cash on Delivery</option>
              <option value="Credit Card">Credit Card / Debit Card</option>
              <option value="UPI">UPI</option>
            </select>
          </div>

          <!-- Card Fields -->
          <div id="card-fields" style="display: none;">
            <div class="mb-3">
              <label class="form-label">Card Number</label>
              <input type="text" class="form-control" id="card-number" maxlength="16" placeholder="16-digit number" />
            </div>
            <div class="mb-3">
              <label class="form-label">Expiry (MM/YY)</label>
              <input type="text" class="form-control" id="expiry" placeholder="MM/YY" maxlength="5" />
            </div>
            <div class="mb-3">
              <label class="form-label">CVV</label>
              <input type="password" class="form-control" id="cvv" maxlength="3" placeholder="3-digit CVV" />
            </div>
          </div>

          <!-- UPI Field -->
          <div id="upi-field" style="display: none;">
            <div class="mb-3">
              <label class="form-label">UPI ID</label>
              <input type="text" class="form-control" id="upi-id" placeholder="example@upi" />
            </div>
          </div>

          <button type="submit" class="btn btn-success w-100">Place Order</button>
        </form>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script>
    function togglePaymentFields() {
      const method = document.getElementById("payment-method").value;
      document.getElementById("card-fields").style.display = method === "Credit Card" ? "block" : "none";
      document.getElementById("upi-field").style.display = method === "UPI" ? "block" : "none";
    }

    async function loadCart() {
      try {
        const response = await fetch("/cart/items", { cache: "no-store" });
        const cart = await response.json();
        const orderSummary = document.getElementById("order-summary");
        const checkoutTotal = document.getElementById("checkout-total");

        orderSummary.innerHTML = "";
        let total = 0;

        if (cart.length === 0) {
          orderSummary.innerHTML = `<li class="list-group-item text-muted">No items in cart.</li>`;
        } else {
          cart.forEach(item => {
            total += item.price * item.quantity;
            orderSummary.innerHTML += `
              <li class="list-group-item d-flex justify-content-between align-items-center">
                ${item.name} (x${item.quantity}) 
                <span>‚Çπ${item.price * item.quantity}</span>
                <button class="btn btn-sm btn-danger" onclick="removeFromCart('${item._id}')">üóëÔ∏è</button>
              </li>`;
          });
        }

        checkoutTotal.innerText = total.toFixed(2);
      } catch (err) {
        console.error("‚ùå Error loading cart:", err);
      }
    }

    async function removeFromCart(itemId) {
      try {
        const res = await fetch("/cart/remove", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ itemId })
        });
        const result = await res.json();
        if (result.success) loadCart();
        else alert("Failed to remove item.");
      } catch (err) {
        console.error(err);
      }
    }

    function validatePayment(method) {
      if (method === "Credit Card") {
        const card = document.getElementById("card-number").value.trim();
        const expiry = document.getElementById("expiry").value.trim();
        const cvv = document.getElementById("cvv").value.trim();

        if (!/^\d{16}$/.test(card)) {
          alert("Enter a valid 16-digit card number.");
          return false;
        }
        if (!/^\d{2}\/\d{2}$/.test(expiry)) {
          alert("Enter expiry in MM/YY format.");
          return false;
        }
        if (!/^\d{3}$/.test(cvv)) {
          alert("Enter a valid 3-digit CVV.");
          return false;
        }
      } else if (method === "UPI") {
        const upi = document.getElementById("upi-id").value.trim();
        if (!/^[\w.-]+@[\w.-]+$/.test(upi)) {
          alert("Enter a valid UPI ID (example@upi)");
          return false;
        }
      }
      return true;
    }

    async function placeOrder() {
      const name = document.getElementById("name").value.trim();
      const email = document.getElementById("email").value.trim();
      const address = document.getElementById("address").value.trim();
      const method = document.getElementById("payment-method").value;

      if (!name || !email || !address || !method) {
        alert("Please fill all required fields.");
        return;
      }

      if (!validatePayment(method)) return;

      const res = await fetch("/cart/items", { cache: "no-store" });
      const cart = await res.json();
      if (cart.length === 0) {
        alert("Cart is empty!");
        return;
      }

      const order = {
        name, email, address, paymentMethod: method,
        items: cart.map(i => ({ name: i.name, quantity: i.quantity, price: i.price })),
        totalAmount: cart.reduce((sum, i) => sum + (i.price * i.quantity), 0)
      };

      try {
        const orderRes = await fetch("/order/checkout", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(order)
        });

        const result = await orderRes.json();
        if (result.success) {
          await fetch("/cart/clear", { method: "POST" });
          window.location.href = "/thankyou";
        } else {
          alert("‚ùå Failed to place order.");
        }
      } catch (err) {
        console.error("‚ùå Order error:", err);
        alert("Something went wrong.");
      }
    }

    document.getElementById("checkout-form").addEventListener("submit", e => {
      e.preventDefault();
      placeOrder();
    });

    document.addEventListener("DOMContentLoaded", loadCart);
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
