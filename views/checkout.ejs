<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="/css/checkout.css">

</head>
<body>

    <!-- ‚úÖ Navigation Bar -->
    <nav class="navbar navbar-expand-lg navbar-dark fixed-top">
        <div class="container">
            <a class="navbar-brand fw-bold text-uppercase" href="/">Restaurant Name</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item"><a class="nav-link" href="/">Home</a></li>
                    <li class="nav-item"><a class="nav-link" href="/menu">Menu</a></li>
                    <li class="nav-item"><a class="nav-link active" href="/checkout">Checkout</a></li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- ‚úÖ Checkout Page Content -->
    <div class="container mt-5 pt-5">
        <h2 class="text-center mb-4">üõí Checkout</h2>
        
        <div class="row">
            <!-- ‚úÖ Order Summary Section -->
            <div class="col-md-6">
                <h4>Order Summary</h4>
                <ul class="list-group" id="order-summary">
                    <li class="list-group-item text-muted">Loading cart items...</li>
                </ul>
                <hr>
                <h5>Total Amount: ‚Çπ <span id="checkout-total">0</span></h5>
            </div>

            <!-- ‚úÖ Billing Information Section -->
            <div class="col-md-6">
                <h4>Billing Information</h4>
                <form id="checkout-form">
                    <div class="mb-3">
                        <label for="name" class="form-label">Full Name</label>
                        <input type="text" class="form-control" id="name" required>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email Address</label>
                        <input type="email" class="form-control" id="email" required>
                    </div>
                    <div class="mb-3">
                        <label for="address" class="form-label">Delivery Address</label>
                        <input type="text" class="form-control" id="address" required>
                    </div>
                    <div class="mb-3">
                        <label for="payment-method" class="form-label">Payment Method</label>
                        <select class="form-select" id="payment-method">
                            <option value="COD">Cash on Delivery</option>
                            <option value="Credit Card">Credit Card</option>
                            <option value="UPI">UPI</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-success w-100">Place Order</button>
                </form>
            </div>
        </div>
    </div>
<script>
    async function loadCart() {
        try {
            console.log("üîÑ Fetching latest cart data...");
            let response = await fetch("/cart/items", { cache: "no-store" });
            let cart = await response.json();

            let orderSummary = document.getElementById("order-summary");
            let checkoutTotal = document.getElementById("checkout-total");

            orderSummary.innerHTML = "";
            let total = 0;

            if (cart.length === 0) {
                orderSummary.innerHTML = `<li class="list-group-item text-muted">No items in cart.</li>`;
            } else {
                cart.forEach(item => {
                    total += item.price * item.quantity;

                    orderSummary.innerHTML += `
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            ${item.name} (x${item.quantity}) 
                            <span>‚Çπ${item.price * item.quantity}</span>
                            <button class="btn btn-sm btn-danger" onclick="removeFromCart('${item._id}')">üóëÔ∏è</button>
                        </li>
                    `;
                });
            }

            checkoutTotal.innerText = total.toFixed(2);
        } catch (error) {
            console.error("‚ùå Error fetching cart:", error);
        }
    }
    async function removeFromCart(itemId) {
    try {
        let response = await fetch("/cart/remove", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ itemId })
        });

        let result = await response.json();

        if (response.ok && result.success) {
            console.log(`üóëÔ∏è Successfully removed item: ${itemId}`);
            await loadCart();  // ‚úÖ Update UI
        } else {
            console.error("‚ùå Error removing item:", result.message || "Unknown error");
            alert("Failed to remove item from cart.");
        }
    } catch (error) {
        console.error("‚ùå Error:", error);
        alert("Something went wrong while removing the item.");
    }
}

    async function placeOrder() {
        let name = document.getElementById("name").value;
        let email = document.getElementById("email").value;
        let address = document.getElementById("address").value;
        let paymentMethod = document.getElementById("payment-method").value;

        let response = await fetch("/cart/items", { cache: "no-store" });
        let cart = await response.json();

        if (cart.length === 0) {
            alert("Your cart is empty!");
            return;
        }

        let order = {
            name, email, address, paymentMethod,
            items: cart.map(item => ({
                name: item.name, quantity: item.quantity, price: item.price
            })),
            totalAmount: cart.reduce((sum, item) => sum + (item.price * item.quantity), 0)
        };

        try {
            let orderResponse = await fetch("/order/checkout", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(order)
            });

            let result = await orderResponse.json();
            if (result.success) {
                await fetch("/cart/clear", { method: "POST" });
                window.location.href = "/thankyou/";
            } else {
                alert("‚ùå Error processing order. Please try again.");
            }
        } catch (error) {
            console.error("‚ùå Error:", error);
        }
    }

    document.getElementById("checkout-form").addEventListener("submit", function (event) {
        event.preventDefault();
        placeOrder();
    });

    document.addEventListener("DOMContentLoaded", loadCart);
</script>

    
    
    
    
</body>
</html>
